<?php
namespace ApiV1Bundle\Repository;

/**
 * AgenteRepository
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AgenteRepository extends ApiRepository
{

    /**
     *
     * @return \Doctrine\ORM\EntityRepository
     */
    private function getRepository()
    {
        return $this->getEntityManager()->getRepository('ApiV1Bundle:Agente');
    }

    /**
     * Encontrar todos los agentes y delvolver el resultado paginado
     *
     * @param $puntoAtencionId
     * @param $offset
     * @param $limit
     */
    public function findAllPaginate($puntoAtencionId, $offset, $limit)
    {
        $query = $this->getRepository()->createQueryBuilder('a');
        $query->leftJoin('a.ventanillaActual', 'v');
        $query->where('a.puntoAtencion = :puntoAtencionId');
        $query->setParameter('puntoAtencionId', $puntoAtencionId);
        $query->setFirstResult($offset);
        $query->setMaxResults($limit);
        $query->orderBy('a.id', 'ASC');
        return $query->getQuery()->getResult();
    }

    /**
     * Devuelve el total de agentes
     *
     * @param $puntoAtencionId
     * @return number
     */
    public function getTotal($puntoAtencionId)
    {
        $query = $this->getRepository()->createQueryBuilder('a');
        $query->select('count(a.id)');
        $query->where('a.puntoAtencion = :puntoAtencionId');
        $query->setParameter('puntoAtencionId', $puntoAtencionId);
        $total = $query->getQuery()->getSingleScalarResult();
        return (int) $total;
    }

    public function findOneByVentanilla($ventanillaId) {
        $query = $this->getRepository()->createQueryBuilder('a');
        $query->where('a.ventanillaActual = :ventanillaId');
        $query->setParameter('ventanillaId', $ventanillaId);
        return $query->getQuery()->getSingleResult();
    }
}
